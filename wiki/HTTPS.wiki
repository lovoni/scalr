#summary How to enable HTTPS in your farm

Currently, you need to manually edit nginx.conf and synchronize your instance.

== nginx.conf ==

{{{
  server {
       listen       443;
        server_name  %DOMAIN_NAME% www.%DOMAIN_NAME%;

        ssl                  on;
        ssl_certificate      %PATH_TO_CERT%;
        ssl_certificate_key  %PATH_TO_PKEY%;

        ssl_session_timeout  10m;
        ssl_session_cache    shared:SSL:10m;

        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers   on;

        location / {
            proxy_pass         http://backend;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

            client_max_body_size       10m;
            client_body_buffer_size    128k;

          
            proxy_buffering on;
            proxy_connect_timeout 15;
            proxy_intercept_errors on;  
        }
    }
}}}

== Parameters ==

  * %DOMAIN_NAME% - Your application hostname
  * %PATH_TO_CERT% - full path to a certificate in PEM format
  * %PATH_TO_PKEY% - full path to a private key in PEM format

== Signed certiicate ==
If you ordered a certificate from authority, in most cases you have .crt, .ca and .key files.
.crt and .ca files should be put in one %PATH_TO_CERT% file and the .key in %PATH_TO_PKEY% 

== Creating self-signed certificate ==

Create the private key, it will require a passphrase (it will be removed later on):
{{{
      openssl genrsa -des3 -out domain.key 1024  
}}}

Remove the passphrase entered earlier when we create the key, if not, the box will ask us to enter the passphrase on every reboot.

{{{
      cp domain.key domain.key.1
      openssl rsa -in pma.key.1 -out domain.key  
}}}

Create the certificate itself:
{{{
 openssl x509 -req -days 365 -in domain.csr -signkey domain.key -out domain.crt  
}}}

#summary Scalr v1 Installation and Configuration
#labels Featured

= Scalr v1 Instalation and Configuration =

== System Requirements ==


To quickly check either your server meets Scalr system requirements, use testenvironment.php script from app/www folder.
Simply upload php file on your host and open it in browser. It should find most of major issues.

Scalr requires a web server and can run on any POSIX-compatible (Linux, BSD etc.) operating system, as long as the following requirements are met:
  * PHP 5.2.5 or higher, 
  * MySQL 5.0 or higher (MySQL 5.1 or higher preferred)


=== Required PHP configuration options ===
  * safe_mode must be set to Off 
  * register_globals must be Off

=== Required PHP extensions ===
  * [http://php.net/mysqli mysqli]
  * [http://php.net/curl cURL]
  * [http://php.net/sockets Sockets (--enable-sockets) with SSL support (--with-openssl)]
  * [http://php.net/gettext GetText]
  * [http://php.net/SimpleXML SimpleXML]
  * [http://php.net/mcrypt mcrypt]
  * [http://php.net/mhash mhash]
  * [http://php.net/pcntl pcntl]
  * [http://php.net/posix posix]
  * [http://php.net/ssh2 ssh2]
  * [http://php.net/dom DOM]
  * [http://php.net/Soap SOAP]
  * [http://php.net/SNMP SNMP]
  * [http://pecl.php.net/package/pecl_http pecl_http]


== Installation ==

Copy contents of app folder on your webserver.
Only app/www folder must be readable by webserver, all other folders must be underneath web root.
This also means that Scalr will not work from the subfolder (i.e. domain.com/something). Please create a subdomain and install in it's web root. 

=== Set folders permissions ===
Set permissions on the following folders (and subfolders) and files to 777 (world-writable):
  * cache
  * cron/cron.pid
  * etc/.passwd


=== Create and configure database ===

  # Create new MySQL database 
  # Import database dump from sql/database.sql file.
  # Edit database connection details in /scalr_home_dir/etc/config.ini file.


=== Set Cron jobs ===

For system to work properly, it needs to run a few tasks periodicaly.
Scalr has a single cron/cron.php file that must be executed with various command-line switches.
The following tasks must be sheduled:

{{{
* * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --Poller
* * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --Scaling
1 1 * * * /path/to/php -q /scalr_home_dir/cron/cron.php --RotateLogs
*/15 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --MySQLMaintenance
*/6 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --DNSMaintenance
*/10 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --EBSArraysMaintenance
*/5 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --EBSMaintenance
*/3 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --DNSZoneListUpdate
*/2 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --DBQueueEvent
*/3 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --MessagingQueue
*/11 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --Cleaner
*/2 * * * * /path/to/php -q /scalr_home_dir/cron/cron.php --EBSQueue
*/3 * * * *  /path/to/php -q /scalr_home_dir/cron/cron.php --UsageStatsPoller
}}}

=== Configure primary AWS account ===
Sclar needs to have AWS access.
  # Put your EC2 access certificate into /scalr_home_dir/etc/cert-XXXXXXXXXXXX.pem
  # Put your EC2 private key into /scalr_home_dir/etc/pk-XXXXXXXXXXXX.pem
Where XXXXXXXXXXXX is Your Access Key name, which you specify on "Settings->Core settings" page.


=== Configuration ===
Installation complete! You may now proceed to configuration.
Log in as admin / admin, go to *Settings->Core settings* and edit settings.


== Known issues == 
  * If you plan to run Scalr on Fedora. Apparently snmptrap tool on Fedora uses port 161 instead of standard 162  - http://groups.google.com/group/scalr-discuss/t/68457bc1edd9d8b4
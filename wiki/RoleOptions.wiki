#summary Using role parameters

= What is this all about? =

When you create your custom role on Scalr, you can specify what "options" instances of this role will need to function properly.
For example, Tomcat-based application server may need admin password, memcached instance may need a list of IP adresses that will be allowed to connect from outside.

Scalr provide a straightforward yet efficient way for this: 

  # You specify what parameters you will need on instances of your role. Go to `Roles -> View all`, click on `Options -> Edit` and then cick on `Options` tab.
  # When you build a farm, you enter values for these options on Options tab.
  # You retreive these values on any istance of a role using simple HTTP call to Scalr.



= How to retreive an option value from my application or a script? =

By calling https://scalr.net/config_opts.php
If you are running your own Scalr, the URL will be different.

Options are named in the following manner: 'options.%option_name%'. Non-alphanumeric symbols replaced by an underscore, all letters are lowercased.


Say, you created option 'Admin Password', then you can retreive it at

`https://scalr.net/config_opts.php?option=options.admin_password&FarmID=115&Hash=0123456789abcde&InstanceID=i-123456`

  * Hash and FarmID parameters can be taken from the `/etc/aws/farmconfig` file
  * InstanceID can be taken from http://169.254.169.254/latest/meta-data/instance-id


In bash script you can retreive parameter using the below code:

{{{
. /usr/local/aws/lib/lib.sh
ec2_get_option_val options.admin_password
}}}